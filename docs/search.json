[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "3376project",
    "section": "",
    "text": "Welcome to my final project of math 3376."
  },
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "About",
    "section": "",
    "text": "About this site\n\n1 + 1\n\n[1] 2"
  },
  {
    "objectID": "Packages Required.html",
    "href": "Packages Required.html",
    "title": "Packages Required",
    "section": "",
    "text": "library(plotly)\nlibrary(readr) # for reading CSV files\nlibrary(DT)\nlibrary(httr)\nlibrary(tidyverse) # For data wrangling\nlibrary(jsonlite)\nlibrary(withr)\nlibrary(ggplot2) # For plotting\nlibrary(stringr)  # for string cleaning"
  },
  {
    "objectID": "Exploratory Data.html",
    "href": "Exploratory Data.html",
    "title": "Exploratory Data Analysis",
    "section": "",
    "text": "Introduction\nIn this analysis, I explore what makes a Simpsons episode successful during the 2010–2016 seasons. I define success in three ways: critical reception (IMDb ratings), fan engagement (IMDb votes), and audience reach (viewership numbers). By combining these perspectives, I aim to understand how episode quality, popularity, and visibility align — or diverge — and uncover meaningful insights that could inform content producers, broadcasters, or fans.\n\n\nData Preparation\nI used the cleaned simpsons_episodes_filtered dataset, which includes episodes from 2010 to 2016 with non-missing IMDb ratings and vote counts. I focus on the following variables: - imdb_rating: IMDb rating (critical reception) - imdb_votes: Number of IMDb votes (fan engagement) - us_viewers_in_millions: U.S. viewership numbers (audience reach) - views: Total view counts - number_in_season: Episode position in the season (to identify premieres and finales). I also create a new dataset called episode_summary based on the simpsons_Episodes_filtered dataset.\n\n\nExploratory Data Analysis\n\nDo Higher-Rated Episodes Attract More Viewers?Do Episodes with More IMDb Votes Get More Views?Are Season Premieres and Finales Better Rated or More Watched?\n\n\n\np1 &lt;- ggplot(simpsons_episodes_filtered, aes(x = imdb_rating, y = us_viewers_in_millions)) +\n  geom_point(aes(text = paste(\"Title:\", title,\n                              \"&lt;br&gt;Season:\", season,\n                              \"&lt;br&gt;IMDb Votes:\", imdb_votes)),\n             alpha = 0.6, color = \"darkorange\") +\n  geom_smooth(method = \"lm\", se = FALSE, color = \"navy\") +\n  labs(\n    title = \"Do Higher-Rated Episodes Attract More U.S. Viewers?\",\n    x = \"IMDb Rating\",\n    y = \"U.S. Viewers (millions)\") +\n  theme_minimal(base_size = 14)\n\nggplotly(p1, tooltip = \"text\")\n\n\n\n\n\n\np2 &lt;- simpsons_episodes_filtered |&gt;\n  mutate(rating_bin = cut(imdb_rating, breaks = seq(4, 9, by = 0.5))) %&gt;%\n  ggplot(aes(x = rating_bin, y = us_viewers_in_millions, text = paste0(\n    \"Title: \", title,\n    \"&lt;br&gt;Season: \", season,\n    \"&lt;br&gt;IMDb Rating: \", imdb_rating,\n    \"&lt;br&gt;Viewers: \", us_viewers_in_millions, \"M\"\n  ))) +\n  geom_boxplot(fill = \"yellow\") +\n  labs(\n    title = \"Distribution of U.S. Viewers by IMDb Rating Bins\",\n    x = \"IMDb Rating (binned)\",\n    y = \"U.S. Viewers (millions)\"\n  ) +\n  theme_minimal(base_size = 14)\nggplotly(p2, tooltip = \"text\")\n\n\n\n\n\nInsight: We examine whether critical acclaim translates into broader audience reach. The trendline will reveal whether better-rated episodes generally attract more viewers.\n\n\n\n\np3 &lt;- ggplot(simpsons_episodes_filtered, aes(x = imdb_votes, y = views)) +\n  geom_point(aes(text = paste0(\n    \"Title: \", title,\n    \"&lt;br&gt;Season: \", season,\n    \"&lt;br&gt;IMDb Rating: \", imdb_rating,\n    \"&lt;br&gt;Total Views: \", views\n  )),\n  alpha = 0.6, color = \"darkgreen\") +\n  geom_smooth(method = \"lm\", se = FALSE, color = \"limegreen\") +\n  labs(\n    title = \"Do Episodes with More IMDb Votes Get More Views?\",\n    x = \"IMDb Votes\",\n    y = \"Total Views\"\n  ) +\n  theme_minimal(base_size = 14)\n\nggplotly(p3, tooltip = \"text\")\n\n\n\n\n\nInsight: We assess whether fan engagement (as measured by votes) corresponds to wider online viewership. Outliers or weak correlations could indicate niche-fan favorites or mass-appeal episodes.\n\n\n\n\nepisode_summary &lt;- simpsons_episodes_filtered |&gt;\n  group_by(season) |&gt;\n  mutate(\n    is_premiere = number_in_season == 1,\n    is_finale = number_in_season == max(number_in_season))\n\npremieres &lt;- episode_summary |&gt; filter(is_premiere) # Get only premieres\nfinales &lt;- episode_summary |&gt; filter(is_finale) # Get only finales\n\npremieres &lt;- premieres |&gt; mutate(type = \"Premiere\")\nfinales &lt;- finales |&gt; mutate(type = \"Finale\")\npremieres_finales &lt;- bind_rows(premieres, finales)\n\n\n# IMDb ratings\nggplot(premieres_finales, aes(x = imdb_rating, fill = type)) +\n    geom_density(alpha = 0.5) +\n    labs(title = \"Density Plot of IMDb Ratings: Premieres vs. Finales\")\n\n\n\n\n\n\n\n# US viewers\nggplot(premieres_finales, aes(x = us_viewers_in_millions, fill = type)) +\n    geom_density(alpha = 0.5) +\n    labs(title = \"Density Plot of US Viewership: Premieres vs. Finales\")\n\n\n\n\n\n\n\n\n\nseason_summary &lt;- premieres_finales |&gt; \n    group_by(season, type) |&gt; \n    summarise(\n        avg_rating = mean(imdb_rating, na.rm = TRUE),\n        avg_views = mean(us_viewers_in_millions, na.rm = TRUE))\n\n# Ratings over seasons\nggplot(season_summary, aes(x = season, y = avg_rating, color = type)) +\n    geom_line() + geom_point() +\n    labs(title = \"Average IMDb Ratings by Season\")\n\n\n\n\n\n\n\n# Views over seasons\nggplot(season_summary, aes(x = season, y = avg_views, color = type)) +\n    geom_line() + geom_point() +\n    labs(title = \"Average US Viewership by Season\")\n\n\n\n\n\n\n\n\n\nsummary_table &lt;- premieres_finales |&gt; \n    group_by(type) |&gt; \n    summarise(\n        mean_rating = mean(imdb_rating, na.rm = TRUE),\n        median_rating = median(imdb_rating, na.rm = TRUE),\n        mean_views = mean(us_viewers_in_millions, na.rm = TRUE),\n        median_views = median(us_viewers_in_millions, na.rm = TRUE),\n        n = n())\n\nDT::datatable(summary_table, \n              caption = \"Summary Statistics for Premieres vs. Finales\",\n              options = list(pageLength = 5, scrollX = TRUE))\n\n\n\n\n\n\ntop_premieres &lt;- premieres |&gt; \n    arrange(desc(imdb_rating)) |&gt; \n    select(season, title, imdb_rating, us_viewers_in_millions) |&gt; \n    head(5)\n\ntop_finales &lt;- finales |&gt; \n    arrange(desc(imdb_rating)) |&gt; \n    select(season, title, imdb_rating, us_viewers_in_millions) |&gt; \n    head(5)\n\nDT::datatable(top_premieres, \n              caption = \"Top 5 Premieres by IMDb Rating\",\n              options = list(pageLength = 5, scrollX = TRUE))\n\n\n\n\nDT::datatable(top_finales, \n              caption = \"Top 5 Finales by IMDb Rating\",\n              options = list(pageLength = 5, scrollX = TRUE))\n\n\n\n\n\nInsight: We explore whether special episodes — the first and last in a season — show consistent boosts in ratings or viewership, helping identify key event episodes."
  },
  {
    "objectID": "Summary.html",
    "href": "Summary.html",
    "title": "Summary",
    "section": "",
    "text": "Summary and Recommendations\nThrough this analysis, we identify several drivers of episode success. While higher IMDb ratings show some positive relationship with U.S. viewership, the connection between fan votes and mass appeal is less straightforward, suggesting that niche fan-favorite episodes may not always reach the largest audiences. Additionally, premieres and finales may show elevated performance, indicating key opportunities for promotional pushes or special content.\nLimitations: Our analysis is limited to 2010–2016 seasons and does not account for earlier historical trends, international viewership, or streaming-only performance. Future work could integrate more recent or detailed viewer data, or compare success drivers across the show’s long history.\nRecommendation: Producers and broadcasters can use these insights to better understand what factors contribute to both critical success and audience reach, guiding future episode planning, marketing, or release strategies."
  },
  {
    "objectID": "Simpsons Data.html",
    "href": "Simpsons Data.html",
    "title": "Import Data",
    "section": "",
    "text": "Data ImportData CleaningData PreviewData Description\n\n\n\n# Import datasets directly from GitHub\ncharacters_url &lt;- 'https://raw.githubusercontent.com/rfordatascience/tidytuesday/main/data/2025/2025-02-04/simpsons_characters.csv'\nepisodes_url &lt;- 'https://raw.githubusercontent.com/rfordatascience/tidytuesday/main/data/2025/2025-02-04/simpsons_episodes.csv'\nlocations_url &lt;- 'https://raw.githubusercontent.com/rfordatascience/tidytuesday/main/data/2025/2025-02-04/simpsons_locations.csv'\nscripts_url &lt;- 'https://raw.githubusercontent.com/rfordatascience/tidytuesday/main/data/2025/2025-02-04/simpsons_script_lines.csv'\n\nsimpsons_characters &lt;- readr::read_csv(characters_url, show_col_types = FALSE)\nsimpsons_episodes &lt;- readr::read_csv(episodes_url, show_col_types = FALSE)\nsimpsons_locations &lt;- readr::read_csv(locations_url, show_col_types = FALSE)\nsimpsons_script_lines &lt;- readr::read_csv(scripts_url, show_col_types = FALSE)\n\n\n\n\n# Filter episodes to 2010–2016\nsimpsons_episodes_filtered &lt;- simpsons_episodes |&gt;\n  dplyr::filter(original_air_year &gt;= 2010, original_air_year &lt;= 2016)\n\n# Filter script lines to match those episodes\nsimpsons_script_lines_filtered &lt;- simpsons_script_lines |&gt;\n  dplyr::semi_join(simpsons_episodes_filtered, by = c(\"episode_id\" = \"id\"))\n\n# Preview cleaned data\ncat(\"\\n--- Filtered data dimensions ---\\n\")\n\n\n--- Filtered data dimensions ---\n\ncat(\"Episodes 2010-2016:\", dim(simpsons_episodes_filtered), \"\\n\")\n\nEpisodes 2010-2016: 151 14 \n\ncat(\"Filtered script lines:\", dim(simpsons_script_lines_filtered), \"\\n\")\n\nFiltered script lines: 31793 13 \n\n\n\nsimpsons_characters &lt;- simpsons_characters |&gt; rename(character_id = id)\nsimpsons_characters &lt;- simpsons_characters |&gt; rename(character_name = name)\nsimpsons_characters &lt;- simpsons_characters |&gt; rename(character_normalized_name = normalized_name)\nsimpsons_episodes &lt;- simpsons_episodes |&gt; rename(episode_id = id)\nsimpsons_locations &lt;- simpsons_locations |&gt; rename(location_id = id)\nsimpsons_locations &lt;- simpsons_locations |&gt; rename(location_name = name)\nsimpsons_locations &lt;- simpsons_locations |&gt; rename(location_normalized_name = normalized_name)\nsimpsons_script_lines &lt;- simpsons_script_lines |&gt; rename(script_line_id = id)\n\n\nsimpsons_characters_clean &lt;- simpsons_characters |&gt;\n  mutate(\n    name = str_trim(character_name),\n    normalized_name = str_trim(character_normalized_name),\n    gender = str_trim(gender))\n\nsimpsons_script_lines_clean &lt;- simpsons_script_lines_filtered |&gt;\n  mutate(\n    raw_character_text = str_trim(raw_character_text),\n    spoken_words = str_trim(spoken_words),\n    normalized_text = str_trim(normalized_text))\n\nsimpsons_characters &lt;- simpsons_characters_clean\nsimpsons_script_lines &lt;- simpsons_script_lines_clean\n\n\nepisode_summary &lt;- simpsons_episodes_filtered |&gt;\n  group_by(season) |&gt;\n  mutate(\n    is_premiere = number_in_season == 1,\n    is_finale = number_in_season == max(number_in_season))\n\npremieres &lt;- episode_summary |&gt; filter(is_premiere) # Get only premieres\nfinales &lt;- episode_summary |&gt; filter(is_finale) # Get only finales\n\npremieres &lt;- premieres |&gt; mutate(type = \"Premiere\")\nfinales &lt;- finales |&gt; mutate(type = \"Finale\")\npremieres_finales &lt;- bind_rows(premieres, finales)\n\n\n\n\n# Glimpse the datasets\ndplyr::glimpse(simpsons_characters)\n\nRows: 6,722\nColumns: 6\n$ character_id              &lt;dbl&gt; 7, 12, 13, 16, 20, 24, 26, 27, 29, 30, 34, 3…\n$ character_name            &lt;chr&gt; \"Children\", \"Mechanical Santa\", \"Tattoo Man\"…\n$ character_normalized_name &lt;chr&gt; \"children\", \"mechanical santa\", \"tattoo man\"…\n$ gender                    &lt;chr&gt; NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, …\n$ name                      &lt;chr&gt; \"Children\", \"Mechanical Santa\", \"Tattoo Man\"…\n$ normalized_name           &lt;chr&gt; \"children\", \"mechanical santa\", \"tattoo man\"…\n\ndplyr::glimpse(simpsons_episodes_filtered)\n\nRows: 151\nColumns: 14\n$ id                     &lt;dbl&gt; 450, 452, 455, 457, 462, 464, 466, 469, 472, 47…\n$ image_url              &lt;chr&gt; \"http://static-media.fxx.com/img/FX_Networks_-_…\n$ imdb_rating            &lt;dbl&gt; 6.8, 7.1, 7.1, 5.7, 6.9, 6.6, 6.8, 7.2, 6.9, 7.…\n$ imdb_votes             &lt;dbl&gt; 481, 532, 480, 675, 491, 507, 506, 482, 564, 52…\n$ number_in_season       &lt;dbl&gt; 9, 11, 14, 16, 21, 23, 2, 5, 8, 9, 12, 14, 16, …\n$ number_in_series       &lt;dbl&gt; 450, 452, 455, 457, 462, 464, 466, 469, 472, 47…\n$ original_air_date      &lt;date&gt; 2010-01-03, 2010-01-31, 2010-03-14, 2010-03-28…\n$ original_air_year      &lt;dbl&gt; 2010, 2010, 2010, 2010, 2010, 2010, 2010, 2010,…\n$ production_code        &lt;chr&gt; \"MABF02\", \"MABF03\", \"MABF04\", \"MABF10\", \"MABF13…\n$ season                 &lt;dbl&gt; 21, 21, 21, 21, 21, 21, 22, 22, 22, 22, 22, 22,…\n$ title                  &lt;chr&gt; \"Thursdays with Abie\", \"Million Dollar Maybe\", …\n$ us_viewers_in_millions &lt;dbl&gt; 8.65, 5.11, 5.23, 5.69, 5.66, 5.74, 8.59, 8.97,…\n$ video_url              &lt;chr&gt; \"http://www.simpsonsworld.com/video/25036960396…\n$ views                  &lt;dbl&gt; 36227, 40854, 41357, 44070, 40904, 41830, 35051…\n\ndplyr::glimpse(simpsons_locations)\n\nRows: 4,459\nColumns: 3\n$ location_id              &lt;dbl&gt; 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14…\n$ location_name            &lt;chr&gt; \"Street\", \"Car\", \"Springfield Elementary Scho…\n$ location_normalized_name &lt;chr&gt; \"street\", \"car\", \"springfield elementary scho…\n\ndplyr::glimpse(simpsons_script_lines_filtered)\n\nRows: 31,793\nColumns: 13\n$ id                 &lt;dbl&gt; 132733, 132917, 134285, 134340, 139272, 143138, 147…\n$ episode_id         &lt;dbl&gt; 472, 473, 478, 479, 497, 511, 528, 549, 566, 451, 4…\n$ number             &lt;dbl&gt; 222, 128, 198, 32, 55, 187, 54, 215, 64, 179, 61, 0…\n$ raw_text           &lt;chr&gt; \"Lisa Simpson: (CHORTLE)\", \"Fbi Supervisor: No.\", \"…\n$ timestamp_in_ms    &lt;dbl&gt; 1073000, 607000, 1150000, 218000, 378000, 815000, 3…\n$ speaking_line      &lt;lgl&gt; FALSE, TRUE, TRUE, FALSE, FALSE, FALSE, FALSE, FALS…\n$ character_id       &lt;dbl&gt; 9, 5734, 5816, NA, NA, NA, NA, NA, NA, 2, 2, NA, 2,…\n$ location_id        &lt;dbl&gt; 5, 6, 2117, 3878, 4019, 4104, 136, 1816, 561, 2498,…\n$ raw_character_text &lt;chr&gt; \"Lisa Simpson\", \"Fbi Supervisor\", \"Willis\", NA, NA,…\n$ raw_location_text  &lt;chr&gt; \"Simpson Home\", \"KITCHEN\", \"COTTAGE\", \"GOLD MINE\", …\n$ spoken_words       &lt;chr&gt; NA, \"No.\", \"Oh my.\", NA, NA, NA, NA, NA, NA, NA, \"H…\n$ normalized_text    &lt;chr&gt; NA, \"no\", \"oh my\", NA, NA, NA, NA, NA, NA, NA, \"hol…\n$ word_count         &lt;dbl&gt; NA, 1, 2, NA, NA, NA, NA, NA, NA, NA, 2, NA, 25, 7,…"
  },
  {
    "objectID": "Simpsons Data.html#data-preparation",
    "href": "Simpsons Data.html#data-preparation",
    "title": "Import Data",
    "section": "",
    "text": "Data ImportData CleaningData PreviewData Description\n\n\n\n# Import datasets directly from GitHub\ncharacters_url &lt;- 'https://raw.githubusercontent.com/rfordatascience/tidytuesday/main/data/2025/2025-02-04/simpsons_characters.csv'\nepisodes_url &lt;- 'https://raw.githubusercontent.com/rfordatascience/tidytuesday/main/data/2025/2025-02-04/simpsons_episodes.csv'\nlocations_url &lt;- 'https://raw.githubusercontent.com/rfordatascience/tidytuesday/main/data/2025/2025-02-04/simpsons_locations.csv'\nscripts_url &lt;- 'https://raw.githubusercontent.com/rfordatascience/tidytuesday/main/data/2025/2025-02-04/simpsons_script_lines.csv'\n\nsimpsons_characters &lt;- readr::read_csv(characters_url, show_col_types = FALSE)\nsimpsons_episodes &lt;- readr::read_csv(episodes_url, show_col_types = FALSE)\nsimpsons_locations &lt;- readr::read_csv(locations_url, show_col_types = FALSE)\nsimpsons_script_lines &lt;- readr::read_csv(scripts_url, show_col_types = FALSE)\n\n\n\n\n# Filter episodes to 2010–2016\nsimpsons_episodes_filtered &lt;- simpsons_episodes |&gt;\n  dplyr::filter(original_air_year &gt;= 2010, original_air_year &lt;= 2016)\n\n# Filter script lines to match those episodes\nsimpsons_script_lines_filtered &lt;- simpsons_script_lines |&gt;\n  dplyr::semi_join(simpsons_episodes_filtered, by = c(\"episode_id\" = \"id\"))\n\n# Preview cleaned data\ncat(\"\\n--- Filtered data dimensions ---\\n\")\n\n\n--- Filtered data dimensions ---\n\ncat(\"Episodes 2010-2016:\", dim(simpsons_episodes_filtered), \"\\n\")\n\nEpisodes 2010-2016: 151 14 \n\ncat(\"Filtered script lines:\", dim(simpsons_script_lines_filtered), \"\\n\")\n\nFiltered script lines: 31793 13 \n\n\n\nsimpsons_characters &lt;- simpsons_characters |&gt; rename(character_id = id)\nsimpsons_characters &lt;- simpsons_characters |&gt; rename(character_name = name)\nsimpsons_characters &lt;- simpsons_characters |&gt; rename(character_normalized_name = normalized_name)\nsimpsons_episodes &lt;- simpsons_episodes |&gt; rename(episode_id = id)\nsimpsons_locations &lt;- simpsons_locations |&gt; rename(location_id = id)\nsimpsons_locations &lt;- simpsons_locations |&gt; rename(location_name = name)\nsimpsons_locations &lt;- simpsons_locations |&gt; rename(location_normalized_name = normalized_name)\nsimpsons_script_lines &lt;- simpsons_script_lines |&gt; rename(script_line_id = id)\n\n\nsimpsons_characters_clean &lt;- simpsons_characters |&gt;\n  mutate(\n    name = str_trim(character_name),\n    normalized_name = str_trim(character_normalized_name),\n    gender = str_trim(gender))\n\nsimpsons_script_lines_clean &lt;- simpsons_script_lines_filtered |&gt;\n  mutate(\n    raw_character_text = str_trim(raw_character_text),\n    spoken_words = str_trim(spoken_words),\n    normalized_text = str_trim(normalized_text))\n\nsimpsons_characters &lt;- simpsons_characters_clean\nsimpsons_script_lines &lt;- simpsons_script_lines_clean\n\n\nepisode_summary &lt;- simpsons_episodes_filtered |&gt;\n  group_by(season) |&gt;\n  mutate(\n    is_premiere = number_in_season == 1,\n    is_finale = number_in_season == max(number_in_season))\n\npremieres &lt;- episode_summary |&gt; filter(is_premiere) # Get only premieres\nfinales &lt;- episode_summary |&gt; filter(is_finale) # Get only finales\n\npremieres &lt;- premieres |&gt; mutate(type = \"Premiere\")\nfinales &lt;- finales |&gt; mutate(type = \"Finale\")\npremieres_finales &lt;- bind_rows(premieres, finales)\n\n\n\n\n# Glimpse the datasets\ndplyr::glimpse(simpsons_characters)\n\nRows: 6,722\nColumns: 6\n$ character_id              &lt;dbl&gt; 7, 12, 13, 16, 20, 24, 26, 27, 29, 30, 34, 3…\n$ character_name            &lt;chr&gt; \"Children\", \"Mechanical Santa\", \"Tattoo Man\"…\n$ character_normalized_name &lt;chr&gt; \"children\", \"mechanical santa\", \"tattoo man\"…\n$ gender                    &lt;chr&gt; NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, …\n$ name                      &lt;chr&gt; \"Children\", \"Mechanical Santa\", \"Tattoo Man\"…\n$ normalized_name           &lt;chr&gt; \"children\", \"mechanical santa\", \"tattoo man\"…\n\ndplyr::glimpse(simpsons_episodes_filtered)\n\nRows: 151\nColumns: 14\n$ id                     &lt;dbl&gt; 450, 452, 455, 457, 462, 464, 466, 469, 472, 47…\n$ image_url              &lt;chr&gt; \"http://static-media.fxx.com/img/FX_Networks_-_…\n$ imdb_rating            &lt;dbl&gt; 6.8, 7.1, 7.1, 5.7, 6.9, 6.6, 6.8, 7.2, 6.9, 7.…\n$ imdb_votes             &lt;dbl&gt; 481, 532, 480, 675, 491, 507, 506, 482, 564, 52…\n$ number_in_season       &lt;dbl&gt; 9, 11, 14, 16, 21, 23, 2, 5, 8, 9, 12, 14, 16, …\n$ number_in_series       &lt;dbl&gt; 450, 452, 455, 457, 462, 464, 466, 469, 472, 47…\n$ original_air_date      &lt;date&gt; 2010-01-03, 2010-01-31, 2010-03-14, 2010-03-28…\n$ original_air_year      &lt;dbl&gt; 2010, 2010, 2010, 2010, 2010, 2010, 2010, 2010,…\n$ production_code        &lt;chr&gt; \"MABF02\", \"MABF03\", \"MABF04\", \"MABF10\", \"MABF13…\n$ season                 &lt;dbl&gt; 21, 21, 21, 21, 21, 21, 22, 22, 22, 22, 22, 22,…\n$ title                  &lt;chr&gt; \"Thursdays with Abie\", \"Million Dollar Maybe\", …\n$ us_viewers_in_millions &lt;dbl&gt; 8.65, 5.11, 5.23, 5.69, 5.66, 5.74, 8.59, 8.97,…\n$ video_url              &lt;chr&gt; \"http://www.simpsonsworld.com/video/25036960396…\n$ views                  &lt;dbl&gt; 36227, 40854, 41357, 44070, 40904, 41830, 35051…\n\ndplyr::glimpse(simpsons_locations)\n\nRows: 4,459\nColumns: 3\n$ location_id              &lt;dbl&gt; 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14…\n$ location_name            &lt;chr&gt; \"Street\", \"Car\", \"Springfield Elementary Scho…\n$ location_normalized_name &lt;chr&gt; \"street\", \"car\", \"springfield elementary scho…\n\ndplyr::glimpse(simpsons_script_lines_filtered)\n\nRows: 31,793\nColumns: 13\n$ id                 &lt;dbl&gt; 132733, 132917, 134285, 134340, 139272, 143138, 147…\n$ episode_id         &lt;dbl&gt; 472, 473, 478, 479, 497, 511, 528, 549, 566, 451, 4…\n$ number             &lt;dbl&gt; 222, 128, 198, 32, 55, 187, 54, 215, 64, 179, 61, 0…\n$ raw_text           &lt;chr&gt; \"Lisa Simpson: (CHORTLE)\", \"Fbi Supervisor: No.\", \"…\n$ timestamp_in_ms    &lt;dbl&gt; 1073000, 607000, 1150000, 218000, 378000, 815000, 3…\n$ speaking_line      &lt;lgl&gt; FALSE, TRUE, TRUE, FALSE, FALSE, FALSE, FALSE, FALS…\n$ character_id       &lt;dbl&gt; 9, 5734, 5816, NA, NA, NA, NA, NA, NA, 2, 2, NA, 2,…\n$ location_id        &lt;dbl&gt; 5, 6, 2117, 3878, 4019, 4104, 136, 1816, 561, 2498,…\n$ raw_character_text &lt;chr&gt; \"Lisa Simpson\", \"Fbi Supervisor\", \"Willis\", NA, NA,…\n$ raw_location_text  &lt;chr&gt; \"Simpson Home\", \"KITCHEN\", \"COTTAGE\", \"GOLD MINE\", …\n$ spoken_words       &lt;chr&gt; NA, \"No.\", \"Oh my.\", NA, NA, NA, NA, NA, NA, NA, \"H…\n$ normalized_text    &lt;chr&gt; NA, \"no\", \"oh my\", NA, NA, NA, NA, NA, NA, NA, \"hol…\n$ word_count         &lt;dbl&gt; NA, 1, 2, NA, NA, NA, NA, NA, NA, NA, 2, NA, 25, 7,…"
  }
]