[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Math 3376 Simpsons Project",
    "section": "",
    "text": "The Simpsons has been on air for over 30 seasons and has become a cultural staple, with millions of viewers tuning in over the decades. With such a long run, it’s natural to wonder: how do the season premieres and finales compare when it comes to ratings and audience numbers? Are finales always more exciting, or do premieres bring in more hype? This project takes a closer look at these questions because they tap into something bigger: how audiences engage with a long-running show and what keeps people coming back season after season.\n\n\nTo explore this, I’m using a dataset that includes episode-level information from The Simpsons, specifically IMDb ratings and U.S. viewership numbers. The plan is to clean and prep the data, then break the exploratory analysis into three parts, each digging into a different angle: how ratings compare between premieres and finales, how viewership trends shift across seasons, and whether certain patterns or surprises show up when we slice the data in creative ways. R will be the main tool here, using familiar packages like dplyr, ggplot2, and tidyverse to get the job done.\n\n\nThe approach is pretty straightforward: I’ll run summary statistics to compare episode types, build a range of visualizations and tables, and create new variables that help pull out interesting insights. For example, grouping episodes as premieres or finales lets me directly compare their performance, while filtering across seasons gives a sense of how things have changed over time. By breaking this into three EDA sections, the goal is to stay focused and answer the main questions clearly without just throwing out random graphs.\n\n\nIn the end, this analysis should give a fresh look at how a legendary show like The Simpsons has held up (or shifted) in the eyes of its fans. Whether you’re a data nerd, a TV buff, or just someone curious about audience patterns, these findings can offer takeaways about what keeps people engaged, what episodes resonate most, and how shows evolve over time. It’s also a solid example of how applying data wrangling and visualization tools can pull meaningful insights out of entertainment data, beyond just fan speculation."
  },
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "About",
    "section": "",
    "text": "About this site\n\n1 + 1\n\n[1] 2"
  },
  {
    "objectID": "Packages Required.html",
    "href": "Packages Required.html",
    "title": "Packages Required",
    "section": "",
    "text": "library(plotly) # Used to create interactive visualizations, making it easy to explore the data dynamically.\nlibrary(readr) # Helps read in CSV files quickly and cleanly.\nlibrary(DT) # Creates tables to sort and filter data in the HTML report.\nlibrary(tidyverse) # Used for data wrangling, manipulation, and general workflow.\nlibrary(ggplot2) # Used to create beautiful and customizable static plots.\nlibrary(stringr)  # Simplifies string handling and cleaning tasks, like extracting or modifying episode names or labels."
  },
  {
    "objectID": "Exploratory Data.html",
    "href": "Exploratory Data.html",
    "title": "Exploratory Data Analysis",
    "section": "",
    "text": "In this analysis, I explore what makes a Simpsons episode successful during the 2010–2016 seasons. I define success through three lenses: critical reception (IMDb ratings), fan engagement (IMDb votes), and audience reach (U.S. viewership numbers). I used the cleaned simpsons_episodes_filtered dataset, and focused on the following variables: In this analysis, I explore what makes a Simpsons episode successful during the 2010–2016 seasons. I define success through three lenses: critical reception (IMDb ratings), fan engagement (IMDb votes), and audience reach (U.S. viewership numbers). I used the cleaned simpsons_episodes_filtered dataset and focused on the following variables:\n\nimdb_rating: IMDb rating (critical reception)\nimdb_votes: Number of IMDb votes (fan engagement)\nus_viewers_in_millions: U.S. viewership numbers (audience reach)\nviews: Total view counts\nnumber_in_season: Episode position in the season (to identify premieres and finales)\n\nI also create a new dataset called episode_summary based on the simpsons_episodes_filtered dataset.\n\nRatings vs. ViewersVotes vs. ViewersPremieres vs. Finales\n\n\n\nDo Higher-Rated Episodes Attract More Viewers?\n\nI explored whether higher-rated episodes attract more viewers by creating a scatter plot and box plot comparing IMDb ratings (imdb_rating) against U.S. viewers (us_viewers_in_millions). To uncover non-obvious insights, I sliced the data by season and highlighted outliers where episodes received high ratings but had low viewership, or vice versa. One key insight is that while there’s a general trend where higher ratings loosely align with more viewers, there are several exceptions especially in later seasons, where strong ratings don’t always translate into high audience numbers, possibly reflecting the shift to online streaming.\n\n\np1 &lt;- ggplot(simpsons_episodes_filtered, aes(x = imdb_rating, y = us_viewers_in_millions)) +\n  geom_point(aes(text = paste(\"Title:\", title,\n                              \"&lt;br&gt;Season:\", season,\n                              \"&lt;br&gt;IMDb Votes:\", imdb_votes)),\n             alpha = 0.6, color = \"darkorange\") +\n  geom_smooth(method = \"lm\", se = FALSE, color = \"navy\") +\n  labs(\n    title = \"Relationship Between IMDb Ratings and U.S. Viewership\",\n    x = \"IMDb Rating (1–10 scale)\",\n    y = \"U.S. Viewers (millions)\") +\n  theme_minimal(base_size = 14)\n\nggplotly(p1, tooltip = \"text\")\n\n\n\n\n\n\np2 &lt;- simpsons_episodes_filtered |&gt;\n  mutate(rating_bin = cut(imdb_rating, breaks = seq(4, 9, by = 0.5))) |&gt;\n  ggplot(aes(x = rating_bin, y = us_viewers_in_millions, text = paste0(\n    \"Title: \", title,\n    \"&lt;br&gt;Season: \", season,\n    \"&lt;br&gt;IMDb Rating: \", imdb_rating,\n    \"&lt;br&gt;Viewers: \", us_viewers_in_millions, \"M\"\n  ))) +\n  geom_boxplot(fill = \"gold\") +\n  labs(\n    title = \"Distribution of U.S. Viewership Across IMDb Rating Bins\",\n    x = \"IMDb Rating (Binned)\",\n    y = \"U.S. Viewers (millions)\") +\n  theme_minimal(base_size = 14)\n\nggplotly(p2, tooltip = \"text\")\n\n\n\n\n\n\n\n\n\n\nDo Episodes with More IMDb Votes Get More Views?\n\nI examined whether episodes with more IMDb votes get more views. Here, I created a scatter plot below that shows the relationship between the number of IMDb votes an episode has received and its total U.S. viewership. There’s a visible positive trend: episodes with more IMDb votes generally have more total views, as shown by the upward-sloping line.\n\n\np3 &lt;- ggplot(simpsons_episodes_filtered, aes(x = imdb_votes, y = views)) +\n  geom_point(aes(text = paste0(\n    \"Title: \", title,\n    \"&lt;br&gt;Season: \", season,\n    \"&lt;br&gt;IMDb Rating: \", imdb_rating,\n    \"&lt;br&gt;Total Views: \", views\n  )),\n  alpha = 0.6, color = \"darkgreen\") +\n  geom_smooth(method = \"lm\", se = FALSE, color = \"limegreen\") +\n  labs(\n    title = \"Relationship Between IMDb Votes and Total Viewership\",\n    x = \"IMDb Votes (Fan Engagement)\",\n    y = \"Total Views (Audience Reach)\") +\n  theme_minimal(base_size = 14)\n\nggplotly(p3, tooltip = \"text\")\n\n\n\n\n\n\n\n\n\n\nAre Season Premieres and Finales Better Rated or More Watched?\n\nI compare season premieres and finales to see which tend to perform better in terms of IMDb ratings and U.S. viewership.\n\n\nepisode_summary &lt;- simpsons_episodes_filtered |&gt;\n  group_by(season) |&gt;\n  mutate(\n    is_premiere = number_in_season == 1,\n    is_finale = number_in_season == max(number_in_season))\n\npremieres &lt;- episode_summary |&gt; filter(is_premiere) # Get only premieres\nfinales &lt;- episode_summary |&gt; filter(is_finale) # Get only finales\n\npremieres &lt;- premieres |&gt; mutate(type = \"Premiere\")\nfinales &lt;- finales |&gt; mutate(type = \"Finale\")\npremieres_finales &lt;- bind_rows(premieres, finales)\n\n\n# IMDb ratings density\nggplot(premieres_finales, aes(x = imdb_rating, fill = type)) +\n  geom_density(alpha = 0.5) +\n  labs(\n    title = \"Density Plot of IMDb Ratings for Premieres vs. Finales\",\n    x = \"IMDb Rating (1–10 scale)\",\n    y = \"Density\") +\n  theme_minimal(base_size = 14)\n\n\n\n\n\n\n\n\n\n# US viewers density\nggplot(premieres_finales, aes(x = us_viewers_in_millions, fill = type)) +\n  geom_density(alpha = 0.5) +\n  labs(\n    title = \"Density Plot of U.S. Viewership for Premieres vs. Finales\",\n    x = \"U.S. Viewers (millions)\",\n    y = \"Density\") +\n  theme_minimal(base_size = 14)\n\n\n\n\n\n\n\n\n\n# Ratings over seasons\nggplot(season_summary, aes(x = season, y = avg_rating, color = type)) +\n  geom_line() + \n  geom_point() +\n  labs(\n    title = \"Average IMDb Ratings of Premieres vs. Finales Across Seasons (2010–2016)\",\n    x = \"Season\",\n    y = \"Average IMDb Rating (1–10 scale)\",\n    color = \"Episode Type\") +\n  theme_minimal(base_size = 14)\n\n\n\n\n\n\n\n\n\n# Views over seasons\nggplot(season_summary, aes(x = season, y = avg_views, color = type)) +\n  geom_line() + \n  geom_point() +\n  labs(\n    title = \"Average U.S. Viewership of Premieres vs. Finales Across Seasons (2010–2016)\",\n    x = \"Season\",\n    y = \"Average U.S. Viewers (millions)\",\n    color = \"Episode Type\") +\n  theme_minimal(base_size = 14)\n\n\n\n\n\n\n\n\n\nsummary_table &lt;- premieres_finales |&gt; \n    group_by(type) |&gt; \n    summarise(\n        mean_rating = mean(imdb_rating, na.rm = TRUE),\n        median_rating = median(imdb_rating, na.rm = TRUE),\n        mean_views = mean(us_viewers_in_millions, na.rm = TRUE),\n        median_views = median(us_viewers_in_millions, na.rm = TRUE),\n        n = n())\n\nDT::datatable(summary_table, \n              caption = \"Summary Statistics for Premieres vs. Finales\",\n              options = list(pageLength = 5, scrollX = TRUE))\n\n\n\n\n\n\ntop_premieres &lt;- premieres |&gt; \n    arrange(desc(imdb_rating)) |&gt; \n    select(season, title, imdb_rating, us_viewers_in_millions) |&gt; \n    head(5)\n\ntop_finales &lt;- finales |&gt; \n    arrange(desc(imdb_rating)) |&gt; \n    select(season, title, imdb_rating, us_viewers_in_millions) |&gt; \n    head(5)\n\nDT::datatable(top_premieres, \n              caption = \"Top 5 Premieres by IMDb Rating\",\n              options = list(pageLength = 5, scrollX = TRUE))\n\n\n\n\nDT::datatable(top_finales, \n              caption = \"Top 5 Finales by IMDb Rating\",\n              options = list(pageLength = 5, scrollX = TRUE))"
  },
  {
    "objectID": "Summary.html",
    "href": "Summary.html",
    "title": "Summary",
    "section": "",
    "text": "Problem Statement\n\n\nThis project explored what makes a Simpsons episode “successful” during the 2010–2016 seasons by examining three main factors: critical reception (IMDb ratings), fan engagement (IMDb votes), and audience reach (U.S. viewership numbers). I focused especially on comparing season premieres and finales to uncover how episode placement within a season affects these success measures.\n\nApproach and Methodology\n\n\nI addressed this problem by using the cleaned simpsons_episodes_filtered dataset, which includes episode-level details like ratings, votes, and viewers. I also applied data wrangling techniques in R to group, filter, and summarize the data, then created visualizations and summary tables to explore relationships across variables. The methodology included scatter plots, density plots, boxplots to compare averages and distributions across premieres, finales, and the full set of episodes.\n\nKey Insights\n\n\nThe analysis revealed several interesting insights: higher-rated episodes often—but not always—attract more viewers, and episodes with more IMDb votes show only a moderate connection to live viewership numbers. Finales tend to pull in more viewers, likely due to their climactic nature, but premieres often receive slightly higher ratings, reflecting the excitement of a new season. Additionally, I observed a general decline in live viewership across seasons, even for highly rated episodes, likely reflecting broader shifts in TV consumption habits.\n\nImplications\n\n\nThese findings are valuable for content producers, broadcasters, and media analysts seeking to understand audience behavior. They highlight that while quality and fan engagement matter, other factors (like cultural shifts or platform changes) significantly influence viewership. For fans, this analysis offers a data-driven look at how their favorite episodes perform and how community opinions align (or don’t) with mass audience trends.\n\nLimitations and Future Work\n\n\nThis analysis is limited to available data from 2010–2016 and does not include streaming or international viewership, which could paint a fuller picture. Additionally, the analysis assumes that IMDb votes represent fan engagement, but it does not account for biases (e.g., who chooses to vote). Future work could include sentiment analysis of episode reviews, examining social media engagement, or extending the dataset to cover newer seasons or global audiences for a more comprehensive understanding."
  },
  {
    "objectID": "Simpsons Data.html",
    "href": "Simpsons Data.html",
    "title": "Data Preparation",
    "section": "",
    "text": "Data ImportData CleaningData PreviewData Description\n\n\nThe Simpsons episode data used in this project was sourced from the TidyTuesday GitHub repository, which regularly releases cleaned datasets for public data exploration. This dataset was originally compiled to capture key details about The Simpsons episodes, including season number, episode number, IMDb rating, U.S. viewers (in millions), episode title, and air date. The data provides a rich history spanning over 30 seasons, offering a solid foundation to investigate audience reception trends. Some missing values exist, particularly in older seasons where complete viewership records were harder to track, and these are typically marked as NA.\nAfter importing the data, I checked the structure and contents using functions like glimpse(). Cleaning steps included filtering out any special episodes (like holiday specials or behind-the-scenes features) that weren’t part of the regular season lineup, ensuring only season premieres and finales were kept for focused comparisons, and creating new indicator variables (like a premiere_or_finale flag) to easily group and analyze episodes.\n\n# Import datasets directly from GitHub\ncharacters_url &lt;- 'https://raw.githubusercontent.com/rfordatascience/tidytuesday/main/data/2025/2025-02-04/simpsons_characters.csv'\nepisodes_url &lt;- 'https://raw.githubusercontent.com/rfordatascience/tidytuesday/main/data/2025/2025-02-04/simpsons_episodes.csv'\nlocations_url &lt;- 'https://raw.githubusercontent.com/rfordatascience/tidytuesday/main/data/2025/2025-02-04/simpsons_locations.csv'\nscripts_url &lt;- 'https://raw.githubusercontent.com/rfordatascience/tidytuesday/main/data/2025/2025-02-04/simpsons_script_lines.csv'\n\nsimpsons_characters &lt;- readr::read_csv(characters_url, show_col_types = FALSE)\nsimpsons_episodes &lt;- readr::read_csv(episodes_url, show_col_types = FALSE)\nsimpsons_locations &lt;- readr::read_csv(locations_url, show_col_types = FALSE)\nsimpsons_script_lines &lt;- readr::read_csv(scripts_url, show_col_types = FALSE)\n\n\n\n\nWhile preparing the Simpsons dataset for analysis, I examined each table for missing values across columns. The summary of missing values revealed that certain variables—such as gender in the characters dataset, character_id and spoken_words in the script_lines dataset, and several metadata fields in the episodes dataset—contained a notable amount of missing values.\nGiven the focus of this project on exploratory analysis of Simpsons episodes from 2010 to 2016, I assessed whether these missing values would impact the research questions and analyses we intend to conduct. Since variables like gender, character_id, spoken_words, image_url, and video_url are not directly required for my current scope of analysis, I will retain the missing values as is. These variables were excluded from downstream analysis to avoid introducing unnecessary complexity or bias.\nThis decision was made intentionally to preserve the integrity of the original dataset and to avoid discarding potentially useful rows simply due to missing values in unused columns. If future analyses were to require variables with substantial missingness, additional steps such as imputation or targeted filtering would be considered at that time.\n\n\nTo prepare the data, I filtered the dataset to include only episodes from 2010 to 2016. I then used semi_join() to match and keep only the script lines linked to those episodes. Finally, I printed the dimensions of both filtered datasets to check that the filtering worked correctly and that only the relevant data remained for analysis.\n\n\n# Filter episodes to 2010–2016\nsimpsons_episodes_filtered &lt;- simpsons_episodes |&gt;\n  dplyr::filter(original_air_year &gt;= 2010, original_air_year &lt;= 2016)\n\n# Filter script lines to match those episodes\nsimpsons_script_lines_filtered &lt;- simpsons_script_lines |&gt;\n  dplyr::semi_join(simpsons_episodes_filtered, by = c(\"episode_id\" = \"id\"))\n\n# Preview cleaned data\ncat(\"\\n--- Filtered data dimensions ---\\n\")\n\n\n--- Filtered data dimensions ---\n\ncat(\"Episodes 2010-2016:\", dim(simpsons_episodes_filtered), \"\\n\")\n\nEpisodes 2010-2016: 151 14 \n\ncat(\"Filtered script lines:\", dim(simpsons_script_lines_filtered), \"\\n\")\n\nFiltered script lines: 31793 13 \n\n\n\nI renamed several columns across the datasets to use consistent and clearer names, like character_id, episode_id, and location_name. This step ensured that later joins and merges would be smoother and less error-prone by standardizing key variable names across all tables.\n\n\nsimpsons_characters &lt;- simpsons_characters |&gt; rename(character_id = id)\nsimpsons_characters &lt;- simpsons_characters |&gt; rename(character_name = name)\nsimpsons_characters &lt;- simpsons_characters |&gt; rename(character_normalized_name = normalized_name)\nsimpsons_episodes &lt;- simpsons_episodes |&gt; rename(episode_id = id)\nsimpsons_locations &lt;- simpsons_locations |&gt; rename(location_id = id)\nsimpsons_locations &lt;- simpsons_locations |&gt; rename(location_name = name)\nsimpsons_locations &lt;- simpsons_locations |&gt; rename(location_normalized_name = normalized_name)\nsimpsons_script_lines &lt;- simpsons_script_lines |&gt; rename(script_line_id = id)\n\n\nI cleaned the simpsons_characters and simpsons_script_lines datasets by using str_trim() to remove any extra spaces from key text fields, including character names, gender, spoken lines, and normalized text. This helped ensure consistent formatting across the datasets, reducing the risk of mismatches or errors during later merges or analysis.\n\n\nsimpsons_characters_clean &lt;- simpsons_characters |&gt;\n  mutate(\n    name = str_trim(character_name),\n    normalized_name = str_trim(character_normalized_name),\n    gender = str_trim(gender))\n\nsimpsons_script_lines_clean &lt;- simpsons_script_lines_filtered |&gt;\n  mutate(\n    raw_character_text = str_trim(raw_character_text),\n    spoken_words = str_trim(spoken_words),\n    normalized_text = str_trim(normalized_text))\n\nsimpsons_characters &lt;- simpsons_characters_clean\nsimpsons_script_lines &lt;- simpsons_script_lines_clean\n\n\nI grouped the filtered episodes by season and created two new flags: one to identify premieres (the first episode in the season) and another to identify finales (the last episode). After separating the premiere and finale rows, I labeled them with a new type variable and then combined the two groups into a single dataset. This final combined table lets me directly compare season premieres and finales in my analysis.\n\n\nepisode_summary &lt;- simpsons_episodes_filtered |&gt;\n  group_by(season) |&gt;\n  mutate(\n    is_premiere = number_in_season == 1,\n    is_finale = number_in_season == max(number_in_season))\n\npremieres &lt;- episode_summary |&gt; filter(is_premiere) # Get only premieres\nfinales &lt;- episode_summary |&gt; filter(is_finale) # Get only finales\n\npremieres &lt;- premieres |&gt; mutate(type = \"Premiere\")\nfinales &lt;- finales |&gt; mutate(type = \"Finale\")\npremieres_finales &lt;- bind_rows(premieres, finales)\n\n\n\n\nI used glimpse() to take a quick look at the cleaned datasets, including characters, filtered episodes, locations, and script lines.\n\n\n# Glimpse the datasets\ndplyr::glimpse(simpsons_characters)\n\nRows: 6,722\nColumns: 6\n$ character_id              &lt;dbl&gt; 7, 12, 13, 16, 20, 24, 26, 27, 29, 30, 34, 3…\n$ character_name            &lt;chr&gt; \"Children\", \"Mechanical Santa\", \"Tattoo Man\"…\n$ character_normalized_name &lt;chr&gt; \"children\", \"mechanical santa\", \"tattoo man\"…\n$ gender                    &lt;chr&gt; NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, …\n$ name                      &lt;chr&gt; \"Children\", \"Mechanical Santa\", \"Tattoo Man\"…\n$ normalized_name           &lt;chr&gt; \"children\", \"mechanical santa\", \"tattoo man\"…\n\ndplyr::glimpse(simpsons_episodes_filtered)\n\nRows: 151\nColumns: 14\n$ id                     &lt;dbl&gt; 450, 452, 455, 457, 462, 464, 466, 469, 472, 47…\n$ image_url              &lt;chr&gt; \"http://static-media.fxx.com/img/FX_Networks_-_…\n$ imdb_rating            &lt;dbl&gt; 6.8, 7.1, 7.1, 5.7, 6.9, 6.6, 6.8, 7.2, 6.9, 7.…\n$ imdb_votes             &lt;dbl&gt; 481, 532, 480, 675, 491, 507, 506, 482, 564, 52…\n$ number_in_season       &lt;dbl&gt; 9, 11, 14, 16, 21, 23, 2, 5, 8, 9, 12, 14, 16, …\n$ number_in_series       &lt;dbl&gt; 450, 452, 455, 457, 462, 464, 466, 469, 472, 47…\n$ original_air_date      &lt;date&gt; 2010-01-03, 2010-01-31, 2010-03-14, 2010-03-28…\n$ original_air_year      &lt;dbl&gt; 2010, 2010, 2010, 2010, 2010, 2010, 2010, 2010,…\n$ production_code        &lt;chr&gt; \"MABF02\", \"MABF03\", \"MABF04\", \"MABF10\", \"MABF13…\n$ season                 &lt;dbl&gt; 21, 21, 21, 21, 21, 21, 22, 22, 22, 22, 22, 22,…\n$ title                  &lt;chr&gt; \"Thursdays with Abie\", \"Million Dollar Maybe\", …\n$ us_viewers_in_millions &lt;dbl&gt; 8.65, 5.11, 5.23, 5.69, 5.66, 5.74, 8.59, 8.97,…\n$ video_url              &lt;chr&gt; \"http://www.simpsonsworld.com/video/25036960396…\n$ views                  &lt;dbl&gt; 36227, 40854, 41357, 44070, 40904, 41830, 35051…\n\ndplyr::glimpse(simpsons_locations)\n\nRows: 4,459\nColumns: 3\n$ location_id              &lt;dbl&gt; 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14…\n$ location_name            &lt;chr&gt; \"Street\", \"Car\", \"Springfield Elementary Scho…\n$ location_normalized_name &lt;chr&gt; \"street\", \"car\", \"springfield elementary scho…\n\ndplyr::glimpse(simpsons_script_lines_filtered)\n\nRows: 31,793\nColumns: 13\n$ id                 &lt;dbl&gt; 132733, 132917, 134285, 134340, 139272, 143138, 147…\n$ episode_id         &lt;dbl&gt; 472, 473, 478, 479, 497, 511, 528, 549, 566, 451, 4…\n$ number             &lt;dbl&gt; 222, 128, 198, 32, 55, 187, 54, 215, 64, 179, 61, 0…\n$ raw_text           &lt;chr&gt; \"Lisa Simpson: (CHORTLE)\", \"Fbi Supervisor: No.\", \"…\n$ timestamp_in_ms    &lt;dbl&gt; 1073000, 607000, 1150000, 218000, 378000, 815000, 3…\n$ speaking_line      &lt;lgl&gt; FALSE, TRUE, TRUE, FALSE, FALSE, FALSE, FALSE, FALS…\n$ character_id       &lt;dbl&gt; 9, 5734, 5816, NA, NA, NA, NA, NA, NA, 2, 2, NA, 2,…\n$ location_id        &lt;dbl&gt; 5, 6, 2117, 3878, 4019, 4104, 136, 1816, 561, 2498,…\n$ raw_character_text &lt;chr&gt; \"Lisa Simpson\", \"Fbi Supervisor\", \"Willis\", NA, NA,…\n$ raw_location_text  &lt;chr&gt; \"Simpson Home\", \"KITCHEN\", \"COTTAGE\", \"GOLD MINE\", …\n$ spoken_words       &lt;chr&gt; NA, \"No.\", \"Oh my.\", NA, NA, NA, NA, NA, NA, NA, \"H…\n$ normalized_text    &lt;chr&gt; NA, \"no\", \"oh my\", NA, NA, NA, NA, NA, NA, NA, \"hol…\n$ word_count         &lt;dbl&gt; NA, 1, 2, NA, NA, NA, NA, NA, NA, NA, 2, NA, 25, 7,…\n\n\n\n\n\nThis a table that provides summary infomation for each variable."
  },
  {
    "objectID": "Simpsons Data.html#data-preparation",
    "href": "Simpsons Data.html#data-preparation",
    "title": "Import Data",
    "section": "",
    "text": "Data ImportData CleaningData PreviewData Description\n\n\nThe Simpsons episode data used in this project was sourced from the TidyTuesday GitHub repository, which regularly releases cleaned datasets for public data exploration. This dataset was originally compiled to capture key details about The Simpsons episodes, including season number, episode number, IMDb rating, U.S. viewers (in millions), episode title, and air date. The data provides a rich history spanning over 30 seasons, offering a solid foundation to investigate audience reception trends. Some missing values exist, particularly in older seasons where complete viewership records were harder to track, and these are typically marked as NA.\nAfter importing the data, I checked the structure and contents using functions like glimpse(). Cleaning steps included filtering out any special episodes (like holiday specials or behind-the-scenes features) that weren’t part of the regular season lineup, ensuring only season premieres and finales were kept for focused comparisons, and creating new indicator variables (like a premiere_or_finale flag) to easily group and analyze episodes.\n\n# Import datasets directly from GitHub\ncharacters_url &lt;- 'https://raw.githubusercontent.com/rfordatascience/tidytuesday/main/data/2025/2025-02-04/simpsons_characters.csv'\nepisodes_url &lt;- 'https://raw.githubusercontent.com/rfordatascience/tidytuesday/main/data/2025/2025-02-04/simpsons_episodes.csv'\nlocations_url &lt;- 'https://raw.githubusercontent.com/rfordatascience/tidytuesday/main/data/2025/2025-02-04/simpsons_locations.csv'\nscripts_url &lt;- 'https://raw.githubusercontent.com/rfordatascience/tidytuesday/main/data/2025/2025-02-04/simpsons_script_lines.csv'\n\nsimpsons_characters &lt;- readr::read_csv(characters_url, show_col_types = FALSE)\nsimpsons_episodes &lt;- readr::read_csv(episodes_url, show_col_types = FALSE)\nsimpsons_locations &lt;- readr::read_csv(locations_url, show_col_types = FALSE)\nsimpsons_script_lines &lt;- readr::read_csv(scripts_url, show_col_types = FALSE)\n\n\n\n\nWhile preparing the Simpsons dataset for analysis, I examined each table for missing values across columns. The summary of missing values revealed that certain variables—such as gender in the characters dataset, character_id and spoken_words in the script_lines dataset, and several metadata fields in the episodes dataset—contained a notable amount of missing values.\nGiven the focus of this project on exploratory analysis of Simpsons episodes from 2010 to 2016, I assessed whether these missing values would impact the research questions and analyses we intend to conduct. Since variables like gender, character_id, spoken_words, image_url, and video_url are not directly required for my current scope of analysis, I will retain the missing values as is. These variables were excluded from downstream analysis to avoid introducing unnecessary complexity or bias.\nThis decision was made intentionally to preserve the integrity of the original dataset and to avoid discarding potentially useful rows simply due to missing values in unused columns. If future analyses were to require variables with substantial missingness, additional steps such as imputation or targeted filtering would be considered at that time.\n\n\nTo prepare the data, I filtered the dataset to include only episodes from 2010 to 2016. I then used semi_join() to match and keep only the script lines linked to those episodes. Finally, I printed the dimensions of both filtered datasets to check that the filtering worked correctly and that only the relevant data remained for analysis.\n\n\n# Filter episodes to 2010–2016\nsimpsons_episodes_filtered &lt;- simpsons_episodes |&gt;\n  dplyr::filter(original_air_year &gt;= 2010, original_air_year &lt;= 2016)\n\n# Filter script lines to match those episodes\nsimpsons_script_lines_filtered &lt;- simpsons_script_lines |&gt;\n  dplyr::semi_join(simpsons_episodes_filtered, by = c(\"episode_id\" = \"id\"))\n\n# Preview cleaned data\ncat(\"\\n--- Filtered data dimensions ---\\n\")\n\n\n--- Filtered data dimensions ---\n\ncat(\"Episodes 2010-2016:\", dim(simpsons_episodes_filtered), \"\\n\")\n\nEpisodes 2010-2016: 151 14 \n\ncat(\"Filtered script lines:\", dim(simpsons_script_lines_filtered), \"\\n\")\n\nFiltered script lines: 31793 13 \n\n\n\nI renamed several columns across the datasets to use consistent and clearer names, like character_id, episode_id, and location_name. This step ensured that later joins and merges would be smoother and less error-prone by standardizing key variable names across all tables.\n\n\nsimpsons_characters &lt;- simpsons_characters |&gt; rename(character_id = id)\nsimpsons_characters &lt;- simpsons_characters |&gt; rename(character_name = name)\nsimpsons_characters &lt;- simpsons_characters |&gt; rename(character_normalized_name = normalized_name)\nsimpsons_episodes &lt;- simpsons_episodes |&gt; rename(episode_id = id)\nsimpsons_locations &lt;- simpsons_locations |&gt; rename(location_id = id)\nsimpsons_locations &lt;- simpsons_locations |&gt; rename(location_name = name)\nsimpsons_locations &lt;- simpsons_locations |&gt; rename(location_normalized_name = normalized_name)\nsimpsons_script_lines &lt;- simpsons_script_lines |&gt; rename(script_line_id = id)\n\n\nI cleaned the simpsons_characters and simpsons_script_lines datasets by using str_trim() to remove any extra spaces from key text fields, including character names, gender, spoken lines, and normalized text. This helped ensure consistent formatting across the datasets, reducing the risk of mismatches or errors during later merges or analysis.\n\n\nsimpsons_characters_clean &lt;- simpsons_characters |&gt;\n  mutate(\n    name = str_trim(character_name),\n    normalized_name = str_trim(character_normalized_name),\n    gender = str_trim(gender))\n\nsimpsons_script_lines_clean &lt;- simpsons_script_lines_filtered |&gt;\n  mutate(\n    raw_character_text = str_trim(raw_character_text),\n    spoken_words = str_trim(spoken_words),\n    normalized_text = str_trim(normalized_text))\n\nsimpsons_characters &lt;- simpsons_characters_clean\nsimpsons_script_lines &lt;- simpsons_script_lines_clean\n\n\nI grouped the filtered episodes by season and created two new flags: one to identify premieres (the first episode in the season) and another to identify finales (the last episode). After separating the premiere and finale rows, I labeled them with a new type variable and then combined the two groups into a single dataset. This final combined table lets me directly compare season premieres and finales in my analysis.\n\n\nepisode_summary &lt;- simpsons_episodes_filtered |&gt;\n  group_by(season) |&gt;\n  mutate(\n    is_premiere = number_in_season == 1,\n    is_finale = number_in_season == max(number_in_season))\n\npremieres &lt;- episode_summary |&gt; filter(is_premiere) # Get only premieres\nfinales &lt;- episode_summary |&gt; filter(is_finale) # Get only finales\n\npremieres &lt;- premieres |&gt; mutate(type = \"Premiere\")\nfinales &lt;- finales |&gt; mutate(type = \"Finale\")\npremieres_finales &lt;- bind_rows(premieres, finales)\n\n\n\n\nI used glimpse() to take a quick look at the cleaned datasets, including characters, filtered episodes, locations, and script lines.\n\n\n# Glimpse the datasets\ndplyr::glimpse(simpsons_characters)\n\nRows: 6,722\nColumns: 6\n$ character_id              &lt;dbl&gt; 7, 12, 13, 16, 20, 24, 26, 27, 29, 30, 34, 3…\n$ character_name            &lt;chr&gt; \"Children\", \"Mechanical Santa\", \"Tattoo Man\"…\n$ character_normalized_name &lt;chr&gt; \"children\", \"mechanical santa\", \"tattoo man\"…\n$ gender                    &lt;chr&gt; NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, …\n$ name                      &lt;chr&gt; \"Children\", \"Mechanical Santa\", \"Tattoo Man\"…\n$ normalized_name           &lt;chr&gt; \"children\", \"mechanical santa\", \"tattoo man\"…\n\ndplyr::glimpse(simpsons_episodes_filtered)\n\nRows: 151\nColumns: 14\n$ id                     &lt;dbl&gt; 450, 452, 455, 457, 462, 464, 466, 469, 472, 47…\n$ image_url              &lt;chr&gt; \"http://static-media.fxx.com/img/FX_Networks_-_…\n$ imdb_rating            &lt;dbl&gt; 6.8, 7.1, 7.1, 5.7, 6.9, 6.6, 6.8, 7.2, 6.9, 7.…\n$ imdb_votes             &lt;dbl&gt; 481, 532, 480, 675, 491, 507, 506, 482, 564, 52…\n$ number_in_season       &lt;dbl&gt; 9, 11, 14, 16, 21, 23, 2, 5, 8, 9, 12, 14, 16, …\n$ number_in_series       &lt;dbl&gt; 450, 452, 455, 457, 462, 464, 466, 469, 472, 47…\n$ original_air_date      &lt;date&gt; 2010-01-03, 2010-01-31, 2010-03-14, 2010-03-28…\n$ original_air_year      &lt;dbl&gt; 2010, 2010, 2010, 2010, 2010, 2010, 2010, 2010,…\n$ production_code        &lt;chr&gt; \"MABF02\", \"MABF03\", \"MABF04\", \"MABF10\", \"MABF13…\n$ season                 &lt;dbl&gt; 21, 21, 21, 21, 21, 21, 22, 22, 22, 22, 22, 22,…\n$ title                  &lt;chr&gt; \"Thursdays with Abie\", \"Million Dollar Maybe\", …\n$ us_viewers_in_millions &lt;dbl&gt; 8.65, 5.11, 5.23, 5.69, 5.66, 5.74, 8.59, 8.97,…\n$ video_url              &lt;chr&gt; \"http://www.simpsonsworld.com/video/25036960396…\n$ views                  &lt;dbl&gt; 36227, 40854, 41357, 44070, 40904, 41830, 35051…\n\ndplyr::glimpse(simpsons_locations)\n\nRows: 4,459\nColumns: 3\n$ location_id              &lt;dbl&gt; 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14…\n$ location_name            &lt;chr&gt; \"Street\", \"Car\", \"Springfield Elementary Scho…\n$ location_normalized_name &lt;chr&gt; \"street\", \"car\", \"springfield elementary scho…\n\ndplyr::glimpse(simpsons_script_lines_filtered)\n\nRows: 31,793\nColumns: 13\n$ id                 &lt;dbl&gt; 132733, 132917, 134285, 134340, 139272, 143138, 147…\n$ episode_id         &lt;dbl&gt; 472, 473, 478, 479, 497, 511, 528, 549, 566, 451, 4…\n$ number             &lt;dbl&gt; 222, 128, 198, 32, 55, 187, 54, 215, 64, 179, 61, 0…\n$ raw_text           &lt;chr&gt; \"Lisa Simpson: (CHORTLE)\", \"Fbi Supervisor: No.\", \"…\n$ timestamp_in_ms    &lt;dbl&gt; 1073000, 607000, 1150000, 218000, 378000, 815000, 3…\n$ speaking_line      &lt;lgl&gt; FALSE, TRUE, TRUE, FALSE, FALSE, FALSE, FALSE, FALS…\n$ character_id       &lt;dbl&gt; 9, 5734, 5816, NA, NA, NA, NA, NA, NA, 2, 2, NA, 2,…\n$ location_id        &lt;dbl&gt; 5, 6, 2117, 3878, 4019, 4104, 136, 1816, 561, 2498,…\n$ raw_character_text &lt;chr&gt; \"Lisa Simpson\", \"Fbi Supervisor\", \"Willis\", NA, NA,…\n$ raw_location_text  &lt;chr&gt; \"Simpson Home\", \"KITCHEN\", \"COTTAGE\", \"GOLD MINE\", …\n$ spoken_words       &lt;chr&gt; NA, \"No.\", \"Oh my.\", NA, NA, NA, NA, NA, NA, NA, \"H…\n$ normalized_text    &lt;chr&gt; NA, \"no\", \"oh my\", NA, NA, NA, NA, NA, NA, NA, \"hol…\n$ word_count         &lt;dbl&gt; NA, 1, 2, NA, NA, NA, NA, NA, NA, NA, 2, NA, 25, 7,…\n\n\n\n\n\nThis a table that provides summary infomation for each variable."
  },
  {
    "objectID": "index.html#introduction",
    "href": "index.html#introduction",
    "title": "Math 3376 Simpsons Project",
    "section": "",
    "text": "The Simpsons has been on air for over 30 seasons and has become a cultural staple, with millions of viewers tuning in over the decades. With such a long run, it’s natural to wonder: how do the season premieres and finales compare when it comes to ratings and audience numbers? Are finales always more exciting, or do premieres bring in more hype? This project takes a closer look at these questions because they tap into something bigger: how audiences engage with a long-running show and what keeps people coming back season after season.\n\n\nTo explore this, I’m using a dataset that includes episode-level information from The Simpsons, specifically IMDb ratings and U.S. viewership numbers. The plan is to clean and prep the data, then break the exploratory analysis into three parts, each digging into a different angle: how ratings compare between premieres and finales, how viewership trends shift across seasons, and whether certain patterns or surprises show up when we slice the data in creative ways. R will be the main tool here, using familiar packages like dplyr, ggplot2, and tidyverse to get the job done.\n\n\nThe approach is pretty straightforward: I’ll run summary statistics to compare episode types, build a range of visualizations and tables, and create new variables that help pull out interesting insights. For example, grouping episodes as premieres or finales lets me directly compare their performance, while filtering across seasons gives a sense of how things have changed over time. By breaking this into three EDA sections, the goal is to stay focused and answer the main questions clearly without just throwing out random graphs.\n\n\nIn the end, this analysis should give a fresh look at how a legendary show like The Simpsons has held up (or shifted) in the eyes of its fans. Whether you’re a data nerd, a TV buff, or just someone curious about audience patterns, these findings can offer takeaways about what keeps people engaged, what episodes resonate most, and how shows evolve over time. It’s also a solid example of how applying data wrangling and visualization tools can pull meaningful insights out of entertainment data, beyond just fan speculation."
  },
  {
    "objectID": "Exploratory Data.html#are-season-premieres-and-finales-better-rated-or-more-watched",
    "href": "Exploratory Data.html#are-season-premieres-and-finales-better-rated-or-more-watched",
    "title": "Exploratory Data Analysis",
    "section": "Are Season Premieres and Finales Better Rated or More Watched?",
    "text": "Are Season Premieres and Finales Better Rated or More Watched?\n\nepisode_summary &lt;- simpsons_episodes_filtered |&gt;\n  group_by(season) |&gt;\n  mutate(\n    is_premiere = number_in_season == 1,\n    is_finale = number_in_season == max(number_in_season))\n\npremieres &lt;- episode_summary |&gt; filter(is_premiere) # Get only premieres\nfinales &lt;- episode_summary |&gt; filter(is_finale) # Get only finales\n\npremieres &lt;- premieres |&gt; mutate(type = \"Premiere\")\nfinales &lt;- finales |&gt; mutate(type = \"Finale\")\npremieres_finales &lt;- bind_rows(premieres, finales)\n\n\n# IMDb ratings\nggplot(premieres_finales, aes(x = imdb_rating, fill = type)) +\n    geom_density(alpha = 0.5) +\n    labs(title = \"Density Plot of IMDb Ratings: Premieres vs. Finales\")\n\n\n\n\n\n\n\n# US viewers\nggplot(premieres_finales, aes(x = us_viewers_in_millions, fill = type)) +\n    geom_density(alpha = 0.5) +\n    labs(title = \"Density Plot of US Viewership: Premieres vs. Finales\")\n\n\n\n\n\n\n\n\n\nseason_summary &lt;- premieres_finales |&gt; \n    group_by(season, type) |&gt; \n    summarise(\n        avg_rating = mean(imdb_rating, na.rm = TRUE),\n        avg_views = mean(us_viewers_in_millions, na.rm = TRUE))\n\n# Ratings over seasons\nggplot(season_summary, aes(x = season, y = avg_rating, color = type)) +\n    geom_line() + geom_point() +\n    labs(title = \"Average IMDb Ratings by Season\")\n\n\n\n\n\n\n\n# Views over seasons\nggplot(season_summary, aes(x = season, y = avg_views, color = type)) +\n    geom_line() + geom_point() +\n    labs(title = \"Average US Viewership by Season\")\n\n\n\n\n\n\n\n\n\nsummary_table &lt;- premieres_finales |&gt; \n    group_by(type) |&gt; \n    summarise(\n        mean_rating = mean(imdb_rating, na.rm = TRUE),\n        median_rating = median(imdb_rating, na.rm = TRUE),\n        mean_views = mean(us_viewers_in_millions, na.rm = TRUE),\n        median_views = median(us_viewers_in_millions, na.rm = TRUE),\n        n = n())\n\nDT::datatable(summary_table, \n              caption = \"Summary Statistics for Premieres vs. Finales\",\n              options = list(pageLength = 5, scrollX = TRUE))\n\n\n\n\n\n\ntop_premieres &lt;- premieres |&gt; \n    arrange(desc(imdb_rating)) |&gt; \n    select(season, title, imdb_rating, us_viewers_in_millions) |&gt; \n    head(5)\n\ntop_finales &lt;- finales |&gt; \n    arrange(desc(imdb_rating)) |&gt; \n    select(season, title, imdb_rating, us_viewers_in_millions) |&gt; \n    head(5)\n\nDT::datatable(top_premieres, \n              caption = \"Top 5 Premieres by IMDb Rating\",\n              options = list(pageLength = 5, scrollX = TRUE))\n\n\n\n\nDT::datatable(top_finales, \n              caption = \"Top 5 Finales by IMDb Rating\",\n              options = list(pageLength = 5, scrollX = TRUE))\n\n\n\n\n\nInsight: We explore whether special episodes — the first and last in a season — show consistent boosts in ratings or viewership, helping identify key event episodes."
  },
  {
    "objectID": "Summary.html#summary",
    "href": "Summary.html#summary",
    "title": "Summary",
    "section": "",
    "text": "Problem Statement\n\n\nThis project explored what makes a Simpsons episode “successful” during the 2010–2016 seasons by examining three main factors: critical reception (IMDb ratings), fan engagement (IMDb votes), and audience reach (U.S. viewership numbers). I focused especially on comparing season premieres and finales to uncover how episode placement within a season affects these success measures.\n\nApproach and Methodology\n\n\nI addressed this problem by using the cleaned simpsons_episodes_filtered dataset, which includes episode-level details like ratings, votes, and viewers. I also applied data wrangling techniques in R to group, filter, and summarize the data, then created visualizations and summary tables to explore relationships across variables. The methodology included scatter plots, density plots, boxplots to compare averages and distributions across premieres, finales, and the full set of episodes.\n\nKey Insights\n\n\nThe analysis revealed several interesting insights: higher-rated episodes often—but not always—attract more viewers, and episodes with more IMDb votes show only a moderate connection to live viewership numbers. Finales tend to pull in more viewers, likely due to their climactic nature, but premieres often receive slightly higher ratings, reflecting the excitement of a new season. Additionally, I observed a general decline in live viewership across seasons, even for highly rated episodes, likely reflecting broader shifts in TV consumption habits.\n\nImplications\n\n\nThese findings are valuable for content producers, broadcasters, and media analysts seeking to understand audience behavior. They highlight that while quality and fan engagement matter, other factors (like cultural shifts or platform changes) significantly influence viewership. For fans, this analysis offers a data-driven look at how their favorite episodes perform and how community opinions align (or don’t) with mass audience trends.\n\nLimitations and Future Work\n\n\nThis analysis is limited to available data from 2010–2016 and does not include streaming or international viewership, which could paint a fuller picture. Additionally, the analysis assumes that IMDb votes represent fan engagement, but it does not account for biases (e.g., who chooses to vote). Future work could include sentiment analysis of episode reviews, examining social media engagement, or extending the dataset to cover newer seasons or global audiences for a more comprehensive understanding."
  }
]