---
title: "Exploratory Data Analysis"
---

```{r, echo=FALSE, message=FALSE, warning=FALSE, results='hide'}
library(plotly)
library(readr) # for reading CSV files
library(DT)
library(httr)
library(tidyverse) # For data wrangling
library(jsonlite)
library(withr)
library(ggplot2) # For plotting
library(stringr)  # for string cleaning
```

```{r, echo=FALSE, message=FALSE, warning=FALSE, results='hide'}
# Import datasets directly from GitHub
characters_url <- 'https://raw.githubusercontent.com/rfordatascience/tidytuesday/main/data/2025/2025-02-04/simpsons_characters.csv'
episodes_url <- 'https://raw.githubusercontent.com/rfordatascience/tidytuesday/main/data/2025/2025-02-04/simpsons_episodes.csv'
locations_url <- 'https://raw.githubusercontent.com/rfordatascience/tidytuesday/main/data/2025/2025-02-04/simpsons_locations.csv'
scripts_url <- 'https://raw.githubusercontent.com/rfordatascience/tidytuesday/main/data/2025/2025-02-04/simpsons_script_lines.csv'

simpsons_characters <- readr::read_csv(characters_url, show_col_types = FALSE)
simpsons_episodes <- readr::read_csv(episodes_url, show_col_types = FALSE)
simpsons_locations <- readr::read_csv(locations_url, show_col_types = FALSE)
simpsons_script_lines <- readr::read_csv(scripts_url, show_col_types = FALSE)
```

```{r, echo=FALSE, message=FALSE, warning=FALSE, results='hide'}
# Filter episodes to 2010–2016
simpsons_episodes_filtered <- simpsons_episodes |>
  dplyr::filter(original_air_year >= 2010, original_air_year <= 2016)

# Filter script lines to match those episodes
simpsons_script_lines_filtered <- simpsons_script_lines |>
  dplyr::semi_join(simpsons_episodes_filtered, by = c("episode_id" = "id"))

# Preview cleaned data
cat("\n--- Filtered data dimensions ---\n")
cat("Episodes 2010-2016:", dim(simpsons_episodes_filtered), "\n")
cat("Filtered script lines:", dim(simpsons_script_lines_filtered), "\n")
```

```{r, echo=FALSE, message=FALSE, warning=FALSE, results='hide'}
simpsons_characters <- simpsons_characters |> rename(character_id = id)
simpsons_characters <- simpsons_characters |> rename(character_name = name)
simpsons_characters <- simpsons_characters |> rename(character_normalized_name = normalized_name)
simpsons_episodes <- simpsons_episodes |> rename(episode_id = id)
simpsons_locations <- simpsons_locations |> rename(location_id = id)
simpsons_locations <- simpsons_locations |> rename(location_name = name)
simpsons_locations <- simpsons_locations |> rename(location_normalized_name = normalized_name)
simpsons_script_lines <- simpsons_script_lines |> rename(script_line_id = id)
```

```{r, echo=FALSE, message=FALSE, warning=FALSE, results='hide'}
simpsons_characters_clean <- simpsons_characters |>
  mutate(
    name = str_trim(character_name),
    normalized_name = str_trim(character_normalized_name),
    gender = str_trim(gender))

simpsons_script_lines_clean <- simpsons_script_lines_filtered |>
  mutate(
    raw_character_text = str_trim(raw_character_text),
    spoken_words = str_trim(spoken_words),
    normalized_text = str_trim(normalized_text))

simpsons_characters <- simpsons_characters_clean
simpsons_script_lines <- simpsons_script_lines_clean
```

### Introduction

In this analysis, I explore **what makes a Simpsons episode successful** during the 2010–2016 seasons. I define success in three ways: critical reception (IMDb ratings), fan engagement (IMDb votes), and audience reach (viewership numbers). By combining these perspectives, I aim to understand how episode quality, popularity, and visibility align — or diverge — and uncover meaningful insights that could inform content producers, broadcasters, or fans.

### Data Preparation

I used the cleaned `simpsons_episodes_filtered` dataset, which includes episodes from 2010 to 2016 with non-missing IMDb ratings and vote counts. I focus on the following variables: - `imdb_rating`: IMDb rating (critical reception) - `imdb_votes`: Number of IMDb votes (fan engagement) - `us_viewers_in_millions`: U.S. viewership numbers (audience reach) - `views`: Total view counts - `number_in_season`: Episode position in the season (to identify premieres and finales). I also create a new dataset called `episode_summary` based on the `simpsons_Episodes_filtered` dataset.

### Exploratory Data Analysis

::: panel-tabset

#### Do Higher-Rated Episodes Attract More Viewers?

```{r, warning=FALSE, message=FALSE}
p1 <- ggplot(simpsons_episodes_filtered, aes(x = imdb_rating, y = us_viewers_in_millions)) +
  geom_point(aes(text = paste("Title:", title,
                              "<br>Season:", season,
                              "<br>IMDb Votes:", imdb_votes)),
             alpha = 0.6, color = "darkorange") +
  geom_smooth(method = "lm", se = FALSE, color = "navy") +
  labs(
    title = "Do Higher-Rated Episodes Attract More U.S. Viewers?",
    x = "IMDb Rating",
    y = "U.S. Viewers (millions)") +
  theme_minimal(base_size = 14)

ggplotly(p1, tooltip = "text")
```


```{r, warning=FALSE, message=FALSE}
p2 <- simpsons_episodes_filtered |>
  mutate(rating_bin = cut(imdb_rating, breaks = seq(4, 9, by = 0.5))) %>%
  ggplot(aes(x = rating_bin, y = us_viewers_in_millions, text = paste0(
    "Title: ", title,
    "<br>Season: ", season,
    "<br>IMDb Rating: ", imdb_rating,
    "<br>Viewers: ", us_viewers_in_millions, "M"
  ))) +
  geom_boxplot(fill = "yellow") +
  labs(
    title = "Distribution of U.S. Viewers by IMDb Rating Bins",
    x = "IMDb Rating (binned)",
    y = "U.S. Viewers (millions)"
  ) +
  theme_minimal(base_size = 14)
ggplotly(p2, tooltip = "text")
```

**Insight:** We examine whether critical acclaim translates into broader audience reach. The trendline will reveal whether better-rated episodes generally attract more viewers.

------------------------------------------------------------------------

#### Do Episodes with More IMDb Votes Get More Views?

```{r, warning=FALSE, message=FALSE}
p3 <- ggplot(simpsons_episodes_filtered, aes(x = imdb_votes, y = views)) +
  geom_point(aes(text = paste0(
    "Title: ", title,
    "<br>Season: ", season,
    "<br>IMDb Rating: ", imdb_rating,
    "<br>Total Views: ", views
  )),
  alpha = 0.6, color = "darkgreen") +
  geom_smooth(method = "lm", se = FALSE, color = "limegreen") +
  labs(
    title = "Do Episodes with More IMDb Votes Get More Views?",
    x = "IMDb Votes",
    y = "Total Views"
  ) +
  theme_minimal(base_size = 14)

ggplotly(p3, tooltip = "text")
```

**Insight:** We assess whether fan engagement (as measured by votes) corresponds to wider online viewership. Outliers or weak correlations could indicate niche-fan favorites or mass-appeal episodes.

------------------------------------------------------------------------

#### Are Season Premieres and Finales Better Rated or More Watched?

```{r, warning=FALSE, message=FALSE}
episode_summary <- simpsons_episodes_filtered |>
  group_by(season) |>
  mutate(
    is_premiere = number_in_season == 1,
    is_finale = number_in_season == max(number_in_season))

premieres <- episode_summary |> filter(is_premiere) # Get only premieres
finales <- episode_summary |> filter(is_finale) # Get only finales

premieres <- premieres |> mutate(type = "Premiere")
finales <- finales |> mutate(type = "Finale")
premieres_finales <- bind_rows(premieres, finales)
```

```{r, warning=FALSE, message=FALSE}
# IMDb ratings
ggplot(premieres_finales, aes(x = imdb_rating, fill = type)) +
    geom_density(alpha = 0.5) +
    labs(title = "Density Plot of IMDb Ratings: Premieres vs. Finales")

# US viewers
ggplot(premieres_finales, aes(x = us_viewers_in_millions, fill = type)) +
    geom_density(alpha = 0.5) +
    labs(title = "Density Plot of US Viewership: Premieres vs. Finales")
```

```{r, warning=FALSE, message=FALSE}
season_summary <- premieres_finales |> 
    group_by(season, type) |> 
    summarise(
        avg_rating = mean(imdb_rating, na.rm = TRUE),
        avg_views = mean(us_viewers_in_millions, na.rm = TRUE))

# Ratings over seasons
ggplot(season_summary, aes(x = season, y = avg_rating, color = type)) +
    geom_line() + geom_point() +
    labs(title = "Average IMDb Ratings by Season")

# Views over seasons
ggplot(season_summary, aes(x = season, y = avg_views, color = type)) +
    geom_line() + geom_point() +
    labs(title = "Average US Viewership by Season")
```


```{r, warning=FALSE, message=FALSE}
summary_table <- premieres_finales |> 
    group_by(type) |> 
    summarise(
        mean_rating = mean(imdb_rating, na.rm = TRUE),
        median_rating = median(imdb_rating, na.rm = TRUE),
        mean_views = mean(us_viewers_in_millions, na.rm = TRUE),
        median_views = median(us_viewers_in_millions, na.rm = TRUE),
        n = n())

DT::datatable(summary_table, 
              caption = "Summary Statistics for Premieres vs. Finales",
              options = list(pageLength = 5, scrollX = TRUE))
```


```{r, warning=FALSE, message=FALSE}
top_premieres <- premieres |> 
    arrange(desc(imdb_rating)) |> 
    select(season, title, imdb_rating, us_viewers_in_millions) |> 
    head(5)

top_finales <- finales |> 
    arrange(desc(imdb_rating)) |> 
    select(season, title, imdb_rating, us_viewers_in_millions) |> 
    head(5)

DT::datatable(top_premieres, 
              caption = "Top 5 Premieres by IMDb Rating",
              options = list(pageLength = 5, scrollX = TRUE))

DT::datatable(top_finales, 
              caption = "Top 5 Finales by IMDb Rating",
              options = list(pageLength = 5, scrollX = TRUE))
```

**Insight:** We explore whether special episodes — the first and last in a season — show consistent boosts in ratings or viewership, helping identify key event episodes.

:::
